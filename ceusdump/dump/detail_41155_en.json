{"id":"6311","code":"921NESESECK13","pagename":"CurriculumInformatikM02007W.LVSecureCodeKV","type":"3","ects":"1.5","verantname":"Florian K\u00f6nig","verantemail":"Florian.Koenig@jku.at","changedate":"2013-07-02 00:00:00","version":"2013W","currname":"Computer Science","currnameeng":"Computer Science","currversion":"2013W","lv_id":"6311","wst":"1","teilungsziffer":"0","zuteilung":"3","lvtyp":"10","wechselnd":"0","sprache":"2","langname":"English","lvtypname":"Lecture with exercise","lvtypshort":"KV","zuteilungname":"Direct assignment","currtypename":"Master's programme","curriculumname":"Master's programme Computer Science 2013W","fachbereichname":"Computer Science","typename":"Course","uniname":"Johannes Kepler University Linz","levelname":"Master's programme 2. year","levelshort":"M2","title":"Secure Code","headtitle":"Secure Code","ziele":"Participants will acquire an understanding of the most widely found security vulnerabilities in code and their causes. They will be aware of their problem scope, how to identify threats and the characteristics of common attack vectors. As practical abilities they will learn is finding and fixing insecure code, specifically eliminating those common vulnerabilities, as well as preventing future problems and avoid coding pitfalls. They will have an understanding of secure software development processes and know how to test code for security.\n","lehrinhalte":"<ul><li>principles and techniques of secure software development\n<\/li><li>security risk rankings and taxonomies\n<\/li><li>code injection (SQL injection, cross-site scripting XSS)\n<\/li><li>(buffer) overflows, format string attacks\n<\/li><li>I\/O handling (canonicalization, validation, sanitization)\n<\/li><li>information exposure, guarding secrets (keys, passwords)\n<\/li><li>defensive and diligent coding\n<\/li><li>resilience and anti-tampering (denial of service, obfuscation)\n<\/li><li>safe parallelization (deadlocks, race conditions)\n<\/li><li>authentication, authorization, privilege management\n<\/li><li>secure software development processes\n<\/li><li>specific features of languages and environments\n<\/li><\/ul>","beurteilung":"<ul><li>3-4 individual assignments\n<\/li><li>written exam at the end\n<\/li><li>final grade is a combination of assignment grades and exam grade\n<\/li><\/ul>","sonstiges":null,"voraussetzungen":"<sup><acronym title='Unfortunately this information is not available in english.'>(*)<\/acronym><\/sup>Good knowledge of programming will be required. Participants should be familiar with both Java and C, and have at least working knowledge of HTML \/ HTTP and SQL. \n<\/p>\n<p class='vspace'>In terms of courses: required courses include Softwareentwicklung 1, Softwareentwicklung 2, Informationssysteme 1 and Systemnahe Programmierung; recommended courses include Praktikum aus Softwareentwicklung 2.\n","methoden":"Lecture, practical assignments with individual feedback, discussion of examples during class sessions, possibility to discuss and ask questions in an online forum\n","literatur":"no compulsory reading; supplemental literature:\n<\/p><ul><li><strong>Writing Secure Code<\/strong>. Howard and LeBlanc. Microsoft Press, 2003.\n<\/li><li><strong>The CERT\u00ae Oracle\u00ae Secure Coding Standard for Java<\/strong>. Long et al. Addison-Wesley Professional, 2011.\n<\/li><li><strong>Secure Programming Cookbook for C and C++<\/strong>. Viega and Messier. O'Reilly, 2003.\n<\/li><li><strong>Foundations of Security: What Every Programmer Needs to Know<\/strong>. Kern, Kesavan and Daswani. Apress, 2007.\n<\/li><\/ul>","equivalent":"<sup><acronym title='Unfortunately this information is not available in english.'>(*)<\/acronym><\/sup><strong>in collaboration with 921NESECRYK13: KV Cryptography (3 ECTS) equivalent to<\/strong><br \/>INMNPKVKRYP: KV Kryptographie (4,5 ECTS)<br \/><br \/>INMAWKVSECC: KV Secure Code (1,5 ECTS)\n","children":[]}