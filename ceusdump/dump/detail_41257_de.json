{"id":"2828","code":"526ESWE11","pagename":"CurriculumWirtschaftsinformatikB02008W.FachEinf\u00fchrungInDieSoftwareentwicklung","type":"1","ects":"6","verantname":"Alois Ferscha","verantemail":"alois.ferscha@jku.at","changedate":"2012-02-14 00:00:00","version":"2012S","currname":"Wirtschaftsinformatik","currnameeng":"Business Informatics","currversion":"2009W","pruefungname":"Kumulative Fachpr\u00fcfung","currtypename":"Bachelorstudium","curriculumname":"Bachelorstudium Wirtschaftsinformatik 2009W","fachbereichname":"Informatik","typename":"Studienfach","uniname":"Johannes Kepler Universit\u00e4t Linz","levelname":"Bachelor 1. Jahr","levelshort":"B1","title":"Einf\u00fchrung in die Softwareentwicklung","headtitle":"Einf\u00fchrung in die Softwareentwicklung","ziele":"Die Studierenden sind mit (syntax-unabh\u00e4ngigen) modernen Methoden der Programmierung vertraut, verf\u00fcgen \u00fcber elementare Kenntnisse in der Entwicklung von algorithmischen Programmen und der F\u00e4higkeit der objektorientierten Programmierung, beherrschen Kontrollstrukturen und sind mit elementaren Konzepten der Datenrepr\u00e4sentation, insbesondere mit Listen, B\u00e4umen, rekursiven Datenstrukturen und Algorithmen daf\u00fcr vertraut. Sie beherrschen die Programmiersprache Java.\n","lehrinhalte":"Begriffsfestlegungen:<br \/>Probleml\u00f6sungsstrategien<br \/>Maschinen, Daten und Befehle<br \/>Algorithmusbegriff<br \/>Formale Sprachen, Ausdr\u00fccke, Grammatiken<br \/>Programmiersprachen und \u00dcbersetzer<br \/>Syntaxkonstrukte:<br \/>Primitive Datentypen und Literale<br \/>Variablen, Namen, Deklaration, Initialisierung<br \/>Operatoren (arithmetische, Vergleichs-, Zuweisungs-, logische, bitweise, un\u00e4re) <br \/>Operatorpriorit\u00e4ten, Typumwandlung<br \/>Anweisungen, Sichtbarkeit und Anweisungsfolgen<br \/>Arrays und Zeichenketten<br \/>Kontrollstrukturen<br \/>Grundkonzepte zur Programmierung: <br \/>Objekte, Klassen, Attribute, Methoden<br \/>Referenzen auf Objekte, Konstruktoren<br \/>Programmierung mit Objekten<br \/>Prozeduren und Parameter<br \/>Ein- Ausgabe, Files<br \/>Interfaces<br \/>Erweiterungen von Klassen (\u00dcberladung, Vererbung)<br \/>Ausgew\u00e4hlte Spezielle Programmierkonzepte:<br \/>Dynamische Datenstrukturen (Beispiel Listen)<br \/>\u00dcberblick Dynamische Datenstrukturen (Graphen, Queues, Stapel, Mengen)<br \/>Selbstbezug und Beschreibungsmittel<br \/>Rekursive Algorithmen (lineare und nichtlineare, Beispiel Mergesort)<br \/>Rekursive Datenstrukturen (Beispiel B\u00e4ume)<br \/>Ereignisse und Ereignisbehandlung<br \/>Ausnahmen<br \/>Threads<br \/>Organisation der Programmierung:<br \/>Programmierkonventionen (Code Conventions)<br \/>Dateiorganisation, Gliederung, Kommentare<br \/>Strukturierungskonzepte f\u00fcr umfangreiche Programme<br \/>Dokumentation<br \/>Pakete<br \/>Tools und Entwicklungsumgebungen\n","beurteilung":"Die in den einzelnen Lehrveranstaltungen verwendeten Pr\u00fcfungsformen variieren und sind der jeweiligen Lehrveranstaltungsbeschreibung zu entnehmen. Die Gesamtnote des Moduls wird gem\u00e4\u00df \u00a7 16 Abs 6 Satzungsteil Studienrecht ermittelt.\n","sonstiges":null,"voraussetzungen":"keine\n","methoden":null,"literatur":null,"equivalent":null,"children":[{"id":41258},{"id":41259}]}