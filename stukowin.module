<?php
// $id$
/**
 * @file stukowin.module
 * TODO: Enter file description here.
 */

// Temporary, until Importer is moved to cronjob
set_time_limit(600);

include_once dirname(__FILE__). '/ceus_importer.inc.php';
include_once dirname(__FILE__). '/content_manager.inc.php';

/**
 * Implements hook_help().
 */
function stukowin_help($path, $arg) 
{
  switch ($path) {
    case 'admin/help#stukowin':
      return '<p>' . t('This module gets the complete JKU curriculum for Business Informatics from CEUS and displays it') . '</p>';
      break;
    // Main module help for the block module
    case 'admin/help#block':
      return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href="@blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.', array('@blocks' => url('admin/structure/block'))) . '</p>';
      break;
    // Help for another path in the block module
    case 'admin/structure/block':
      return '<p>' . t('This page provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions. Since not all themes implement the same regions, or display regions in the same way, blocks are positioned on a per-theme basis. Remember that your changes will not be saved until you click the <em>Save blocks</em> button at the bottom of the page.') . '</p>';
      break;
  }
}

/**
 * Hook for admin menu
 */
function stukowin_admin() 
{
  $form = array();
  $form['stukowin_ceus_api_url'] = array(
   '#type' => 'textfield',
    '#title' => t('URL to CEUS API'),
    '#default_value' => variable_get('stukowin_ceus_api_url', 'https://lss.jku.at/studienhandbuch/api/0.1/'),
    '#size' => 40,
    '#maxlength' => 255,
    '#description' => t("The URL to CEUS API"),
    '#required' => TRUE,      
  );
  $form['stukowin_ceus_api_username'] = array(
   '#type' => 'textfield',
    '#title' => t('Username for CEUS API'),
    '#default_value' => variable_get('stukowin_ceus_api_username'),
    '#size' => 20,
    '#maxlength' => 40,
    '#description' => t("Username for CEUS API"),
    '#required' => TRUE,      
  );
  $form['stukowin_ceus_api_userpassword'] = array(
   '#type' => 'password',
    '#title' => t('Password for CEUS API'),
    '#default_value' => variable_get('stukowin_ceus_api_userpassword'),
    '#size' => 20,
    '#maxlength' => 40,
    '#description' => t("Password for CEUS API"),
    '#required' => TRUE,      
  );
  $form['stukowin_ceus_api_lastupdate'] = array(
    '#type' => 'textfield',
    '#title' => t('Last Update from CEUS API'),
    '#default_value' => variable_get('stukowin_ceus_api_lastupdate'),
    '#size' => 20,
    '#maxlength' => 40,
    '#description' => t("Timestamp of last Update in CEUS"),
    '#required' => TRUE,        
  );
  return system_settings_form($form);
}

/**
 * Hook for Menu link "CEUS Data import"
 */
function stukowin_retreive() 
{
  include_once dirname(__FILE__).'/stukowin.install';
  // Call Module Installer - so you don't have to install the module for every change
// stukowin_uninstall(); 
// die("des woas");
  //  Call Module Uninstaller to de-register the content type
// stukowin_install();die('fÃ¤ddisch');
  $oCeusImporter = new ceus_importer();
  if($oCeusImporter->connect())
  {
    return '<pre>'.print_r($oCeusImporter->get_curricula(), true).'</pre>';
  }
  else return $oCeusImporter->get_error();

}

function ideal_curriculum()
{
    $form = array();
  $form['stukowin_ceus_api_url'] = array(
   '#type' => 'textfield',
    '#title' => t('URL to CEUS API'),
    '#default_value' => variable_get('stukowin_ceus_api_url', 'https://lss.jku.at/studienhandbuch/api/0.1/'),
    '#size' => 40,
    '#maxlength' => 255,
    '#description' => t("The URL to CEUS API"),
    '#required' => TRUE,      
  );
  return system_settings_form($form);
}


/**
 * JSON-Service for Curricula
 */
function stukowin_get_crclm_taxonomy($iVID)
{
  $oContentManager = new content_manager();
   return $oContentManager->json_service_curriculum($iVID);
}


/**
 * JSON-Service for Curricula
 */
function stukowin_get_crclm_list()
{
  $oContentManager = new content_manager();
  return $oContentManager->json_service_curriculist();
}

/**
 * JSON-Service for single LVA
 */
function stukowin_get_lva($iNodeID)
{
  $oContentManager = new content_manager();
  return $oContentManager->json_service_lva($iNodeID);
}

/**
 * View for Display of curricula - Desktop HTML Version
 */
function stukowin_curricula()
{
  drupal_add_css(drupal_get_path('module', 'stukowin') .'/css/curriculum_style.css');
  drupal_add_js(drupal_get_path('module', 'stukowin') .'/js/graph.js');
  return '<div id="main" class="main"></div>';
}

/**
 * Implements hook_menu().
 */
function stukowin_menu() 
{
  $items = array(); 
  $items['admin/settings/stukowin/settings'] = array(
    'title' => 'CEUS API Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('stukowin_admin'),
    'access arguments' => array('administer stukowin settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/settings/stukowin/settings'] = array(
    'title' => 'Ideal Curriculum',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ideal_curriculum'),
    'access arguments' => array('administer stukowin settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/settings/stukowin/importjson'] = array(
    'title' => 'CEUS Data import',
    'page callback' => 'stukowin_retreive',
    'access arguments' => array('administer stukowin settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['stukowin/crclm'] = array(
    'title' => 'Service',
    'page callback' => 'stukowin_get_crclm_taxonomy',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['stukowin/crclmlst'] = array(
    'title' => 'Service',
    'page callback' => 'stukowin_get_crclm_list',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );  
  $items['stukowin/lva'] = array(
    'title' => 'Service',
    'page callback' => 'stukowin_get_lva',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['stukowin/curricula'] = array(
    'title' => 'Curricula',
    'page callback' => 'stukowin_curricula',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );  
  return $items;
}

/** 
* Implements hook_node_info() to provide our stukowin type. 
*/ 
function stukowin_node_info() 
{ 
  return array( 
    'stukowin' => array( 
      'name' => t('LVA'), 
      'base' => 'stukowin', 
      'description' => t('Use this content type to post a LVA.'), 
      'has_title' => TRUE, 
      'title_label' => t('Job Title'), 
      'help' => t('Enter the job title, 
      job description, and the name of the company that posted the job'), 
    ), 
  ); 
} 